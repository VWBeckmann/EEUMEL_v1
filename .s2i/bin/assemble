#!/bin/bash
set -e

echo "Starting new build"

REQ_FILE="/tmp/src/requirements.txt"
DOWNLOAD_DIR="/tmp/dependency_cache"
SPACY_MODEL="en_core_web_sm"

# Check if requirements.txt exists
if [ ! -f "$REQ_FILE" ]; then
  echo "Error: requirements.txt not found!"
  exit 1
fi

# Create a clean directory for downloading dependencies
rm -rf "$DOWNLOAD_DIR"
mkdir -p "$DOWNLOAD_DIR"

echo "Downloading dependencies for all packages in $REQ_FILE..."
pip download --no-cache-dir -r "$REQ_FILE" -d "$DOWNLOAD_DIR"

# Extract package names from downloaded files
ALL_PACKAGES=()
SPACY_INSTALLED=false

for file in "$DOWNLOAD_DIR"/*; do
    package_name=$(basename "$file" | sed -E 's/-[0-9].*//')  # Extract package name
    if [[ ! " ${ALL_PACKAGES[@]} " =~ " ${package_name} " ]]; then
        ALL_PACKAGES+=("$package_name")
    fi
    if [[ "$package_name" == "spacy" ]]; then
        SPACY_INSTALLED=true
    fi
done

# Log the final package list
echo "Installing the following packages one by one:"
printf "%s\n" "${ALL_PACKAGES[@]}"

# Install each package individually
for package in "${ALL_PACKAGES[@]}"; do
    echo "Installing $package..."
    pip install --no-cache-dir --disable-pip-version-check "$package"
done

# If spacy was installed, download the language model
if $SPACY_INSTALLED; then
    echo "Spacy detected, downloading language model $SPACY_MODEL..."
    python -m spacy download "$SPACY_MODEL"
fi

echo "All dependencies installed successfully."
